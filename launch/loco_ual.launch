<?xml version="1.0"?>
<launch>
  <arg name="uri" default="radio://0/70/250K" />
  <arg name="frame" default="base_link" />
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="x" default="2.5" />
  <arg name="y" default="2.5" />
  <arg name="z" default="0.7" />
  <arg name="ns_prefix" default="uav_"/>
  <arg name="py" default="false"/>

  <include file="$(find crazyflie_driver)/launch/crazyflie_server.launch" />

  <group ns="crazyflie">
    <rosparam command="load" file="$(find bitcraze_lps_estimator)/data/anchor_pos.yaml" />

    <node pkg="crazyflie_driver" type="crazyflie_add" name="crazyflie_add" output="screen">
      <param name="uri" value="$(arg uri)" />
      <param name="tf_prefix" value="crazyflie" />
      <rosparam>
        genericLogTopics: ["log_kfpos", "log_kfqt", "log_ranges"]
        genericLogTopicFrequencies: [30, 30, 30]
        genericLogTopic_log_kfpos_Variables: ["kalman.stateX", "kalman.stateY", "kalman.stateZ"]
        genericLogTopic_log_kfqt_Variables: ["kalman.q0", "kalman.q1", "kalman.q2", "kalman.q3"]
        genericLogTopic_log_ranges_Variables: ["ranging.distance0", "ranging.distance1", "ranging.distance2", "ranging.distance3", "ranging.distance4", "ranging.distance5", "ranging.state"]
      </rosparam>
    </node>

    <!-- <include file="$(find crazyflie_driver)/launch/crazyflie_add.launch">
      <arg name="uri" value="$(arg uri)" />
      <arg name="tf_prefix" value="crazyflie" />
      <arg name="enable_logging" value="False" />
    </include> -->

    <node name="joy" pkg="joy" type="joy_node" output="screen">
      <param name="dev" value="$(arg joy_dev)" />
    </node>

    <node name="joystick_controller" pkg="crazyflie_demo" type="controller.py" output="screen">
      <param name="use_crazyflie_controller" value="True" />
    </node>

    <group if="$(arg py)">
      <node name="controller_bridge" pkg="bitcraze_lps_estimator" type="crazyflie_controller_bridge.py" output="screen"/>
    </group>
    <group unless="$(arg py)">
      <include file="$(find crazyflie_controller)/launch/crazyflie2.launch">
        <arg name="frame" value="crazyflie/base_link" />
      </include>
    </group>
    <!-- <node name="pose" pkg="crazyflie_demo" type="publish_pose_teleop.py" output="screen">
      <param name="name" value="goal" />
      <param name="rate" value="30" />
      <param name="x" value="$(arg x)" />
      <param name="y" value="$(arg y)" />
      <param name="z" value="$(arg z)" />
    </node> -->

    <node name="lps_efk_bridge" pkg="bitcraze_lps_estimator" type="lps_ekf_bridge.py" output="screen"/>
    <node name="lps_viz" pkg="bitcraze_lps_estimator" type="lps_viz.py" />
    <node name="log_range" pkg="bitcraze_lps_estimator" type="log_range.py" />

  </group>

  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="1 0 0 0 0 0 1 world lps 100" />
  <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 1 lps uav_1_home 100" />
  <param name="robot_description" command="$(find xacro)/xacro.py $(find crazyflie_description)/urdf/crazyflie2.urdf.xacro" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find bitcraze_lps_estimator)/data/rvizconfig_with_goal.rviz"/>

  <!-- Launch UAL server for uav id=1 -->
  <node pkg="uav_abstraction_layer" type="server" name="ual" ns="$(arg ns_prefix)1" output="screen">
    <param name="uav_id" value="1"/>
    <!-- <param name="pose_frame_id" value="world"/> -->
    <param name="ual_server" value="on"/>
    <param name="ual_pub_rate" value="30.0"/>
    <!-- <param name="uav_frame" value="crazyflie/base_link"/> -->
    <!-- <param name="home_pose_parent_frame" value="world"/> -->
    <rosparam param="home_pose">[2.5, 2.5, 0]</rosparam>
    <param name="backend" value="crazyflie"/>
  </node>

</launch>
